#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Demo GUI Petrof√≠sica
===================

Demo simple de la nueva funcionalidad petrof√≠sica en la GUI.
"""

import sys
import os
from pathlib import Path

# Asegurar que usemos la versi√≥n local (ir un nivel arriba desde demo/)
sys.path.insert(0, str(Path(__file__).parent.parent / "src"))

def main():
    print("üß™ Iniciando demo de GUI con petrof√≠sica...")
    
    try:
        # Importar con paths correctos
        from PyQt5.QtWidgets import QApplication
        
        # Crear aplicaci√≥n
        app = QApplication(sys.argv)
        app.setApplicationName("PyPozo Demo")
        
        print("‚úÖ QApplication creada")
        
        # Verificar que podemos importar los m√≥dulos petrof√≠sicos
        sys.path.insert(0, str(Path(__file__).parent.parent / "src" / "pypozo"))
        
        try:
            from petrophysics import VclCalculator, PorosityCalculator
            print("‚úÖ M√≥dulos petrof√≠sicos importados correctamente")
            
            # Crear calculadoras de prueba
            vcl_calc = VclCalculator()
            por_calc = PorosityCalculator()
            
            print(f"‚úÖ VCL Calculator - M√©todos: {list(vcl_calc.methods.keys())}")
            print("‚úÖ Porosity Calculator creado")
            
        except Exception as e:
            print(f"‚ùå Error con m√≥dulos petrof√≠sicos: {e}")
            return False
        
        # Mostrar mensaje de √©xito
        from PyQt5.QtWidgets import QMessageBox, QMainWindow
        
        window = QMainWindow()
        window.setWindowTitle("PyPozo 2.0 - Demo Petrof√≠sica")
        window.resize(800, 600)
        
        msg = QMessageBox()
        msg.setIcon(QMessageBox.Information)
        msg.setWindowTitle("Demo Petrof√≠sica")
        msg.setText("""üéâ ¬°Integraci√≥n Exitosa!
        
Los m√≥dulos petrof√≠sicos est√°n funcionando:

‚úÖ VclCalculator - 5 m√©todos disponibles
‚úÖ PorosityCalculator - 3 m√©todos disponibles  
‚úÖ PetrophysicsCalculator - Base para QC

üöÄ Funcionalidades implementadas:
‚Ä¢ C√°lculo de VCL (5 m√©todos est√°ndar)
‚Ä¢ C√°lculo de PHIE (densidad, neutr√≥n, combinado)
‚Ä¢ Correcciones de arcilla y gas
‚Ä¢ An√°lisis litol√≥gico autom√°tico
‚Ä¢ Control de calidad integrado
‚Ä¢ Exportaci√≥n de resultados

üìã Pr√≥ximos pasos:
‚Ä¢ Saturaci√≥n de Agua (SW)
‚Ä¢ Templates de workflows
‚Ä¢ Mejoras en visualizaci√≥n""")
        
        msg.exec_()
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error en demo: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = main()
    if success:
        print("\nüéâ Demo completado exitosamente!")
        print("üöÄ Los m√≥dulos petrof√≠sicos est√°n listos para usar.")
    else:
        print("\n‚ùå Demo fall√≥. Revisar errores arriba.")
